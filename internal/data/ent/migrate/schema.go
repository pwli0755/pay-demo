// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "order_no", Type: field.TypeString},
		{Name: "payment_type", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeString},
		{Name: "product_id", Type: field.TypeInt64},
		{Name: "total_fee", Type: field.TypeInt64},
		{Name: "order_status", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "timestamp with time zone"}},
		{Name: "updated_at", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "timestamp with time zone"}},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
	}
	// PaymentsColumns holds the columns for the "payments" table.
	PaymentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "order_no", Type: field.TypeString},
		{Name: "transaction_id", Type: field.TypeString},
		{Name: "payment_type", Type: field.TypeString},
		{Name: "trade_type", Type: field.TypeString},
		{Name: "trade_state", Type: field.TypeString},
		{Name: "payer_total", Type: field.TypeInt64},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "timestamp with time zone"}},
		{Name: "updated_at", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "timestamp with time zone"}},
	}
	// PaymentsTable holds the schema information for the "payments" table.
	PaymentsTable = &schema.Table{
		Name:       "payments",
		Columns:    PaymentsColumns,
		PrimaryKey: []*schema.Column{PaymentsColumns[0]},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "price", Type: field.TypeUint64},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "timestamp with time zone"}},
		{Name: "updated_at", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "timestamp with time zone"}},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
	}
	// RefundsColumns holds the columns for the "refunds" table.
	RefundsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "order_no", Type: field.TypeString},
		{Name: "refund_no", Type: field.TypeString},
		{Name: "refund_id", Type: field.TypeString},
		{Name: "total_fee", Type: field.TypeInt64},
		{Name: "refund", Type: field.TypeInt64},
		{Name: "reason", Type: field.TypeString},
		{Name: "refund_status", Type: field.TypeString},
		{Name: "content_return", Type: field.TypeString, Size: 2147483647},
		{Name: "content_notify", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "timestamp with time zone"}},
		{Name: "updated_at", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "timestamp with time zone"}},
	}
	// RefundsTable holds the schema information for the "refunds" table.
	RefundsTable = &schema.Table{
		Name:       "refunds",
		Columns:    RefundsColumns,
		PrimaryKey: []*schema.Column{RefundsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		OrdersTable,
		PaymentsTable,
		ProductsTable,
		RefundsTable,
	}
)

func init() {
}
